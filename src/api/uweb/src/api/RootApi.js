/**
 * uweb/v1/uweb.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1GetNodesResponse', 'model/V1ListNodesResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/V1GetNodesResponse'), require('../model/V1ListNodesResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Uwebv1uwebproto) {
      root.Uwebv1uwebproto = {};
    }
    root.Uwebv1uwebproto.RootApi = factory(root.Uwebv1uwebproto.ApiClient, root.Uwebv1uwebproto.V1GetNodesResponse, root.Uwebv1uwebproto.V1ListNodesResponse);
  }
}(this, function(ApiClient, V1GetNodesResponse, V1ListNodesResponse) {
  'use strict';

  /**
   * Root service.
   * @module api/RootApi
   * @version 1
   */

  /**
   * Constructs a new RootApi. 
   * @alias module:api/RootApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getNodes operation.
     * @callback module:api/RootApi~getNodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1GetNodesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 树结构
     * @param {module:api/RootApi~getNodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1GetNodesResponse}
     */
    this.getNodes = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V1GetNodesResponse;

      return this.apiClient.callApi(
        '/uweb/v1/root/nodes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNodes operation.
     * @callback module:api/RootApi~listNodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1ListNodesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 平铺列表
     * @param {module:api/RootApi~listNodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1ListNodesResponse}
     */
    this.listNodes = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V1ListNodesResponse;

      return this.apiClient.callApi(
        '/uweb/v1/root/nodes:list', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
